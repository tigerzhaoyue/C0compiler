const int max_len = 16;
int list[16];
int getn(int n){
	int tmp;
	tmp = 1;
	if(n >16){
		return (0);
	}
	if(n >=1){
		return (getn(n-1)+tmp);
	}
	return (0);
}

void quicksort(int low,int high)
{
  int first,last,key,loop,i;
  if(low>=high)
  {
     return ;
  }
  if(low<high)
  {
     first=low;
	 last=high;
	 key=list[first];
         while(first<last)
	 {
	   loop=1;
	   while(loop==1)
	   {	
		   if(key>list[last])
		   {
		       loop=0;
		   }
	       if(key<=list[last])
		   {
				if(last<=first)
			  {
			     loop=0;
			  }
		      if(last>first)
			  {
			     loop=1;
				 last=last-1;
			  }
			 
		   }
		   
	   }
	   list[first]=list[last];
	   loop=1;
	   while(loop==1)
	   {
	    if(key<list[first])
		   {
		       loop=0;
		   }
	       if(key>=list[first])
		   {	
		   if(last<=first)
			  {
			     loop=0;
			  }
		      if(last>first)
			  {
			     loop=1;
				 first=first+1;
			  }
			  
		   }
		  
	   }
	   list[last]=list[first];
	 }
	 list[first]=key;
	 quicksort(low,first-1);
	 quicksort(first+1,high);
   }
}



void print_list(int x){
	int i;
	i=0;
	while(i<x){
		printf(" ", list[i]);
		i=i+1;
	}
}


void main(){
	int i;
	i = 0;
	while(i<getn(max_len)){
		list[i] = i*13;
		i=i+2;
	}
	i=getn(max_len-1);
	while(i>=0){
		list[i] =getn(max_len-i)*13;
		i=i-2;
	}

	printf(" before:");
	print_list(max_len);

	quicksort(0,max_len-1);

	printf(" after:");
	print_list(max_len);
	return;
}